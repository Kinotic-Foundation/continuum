##
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##
  logging:
    level:
      com:
        kinotic: INFO
      org:
        reflections:
          Reflections: ERROR # This guy WARNs unnecessary stuff

  spring:
    main:
      web-application-type: none

  # This section provides some defaults that are typically used by Continuum Kafka Connect
  # All of the Kafka Connect properties are supported https://docs.confluent.io/platform/current/connect/references/allconfigs.html
  # Additionally Kafka properties are passed through to the Kafka Admin, Kafka Consumer, and Kafka Producer created by Kafka Connect
  kafka-connect:
    workerProperties:
      # This file contains some of the configurations for the Kafka Connect distributed worker. This file is intended
      # to be used with the examples, and some settings may differ from those used in a production system, especially
      # the `bootstrap.servers` and those specifying replication factors.

      # A list of host/port pairs to use for establishing the initial connection to the Kafka cluster.
      # This is typically supplied by the Continuum Core but can be overridden with custom properties
      #bootstrap.servers=localhost:9092

      # unique name for the cluster, used in forming the Connect cluster group. Note that this must not conflict with consumer group IDs
      group.id: continuum-connect-cluster

      # The converters specify the format of data in Kafka and how to translate it into Connect data.
      # These defaults are used so functionality provided by Continuum Kafka Connect can work properly
      # If you need different converters specify them when configuring your connector
      key.converter: org.apache.kafka.connect.storage.StringConverter
      value.converter: org.apache.kafka.connect.converters.ByteArrayConverter

      # Topic to use for storing offsets. This topic should have many partitions and be replicated and compacted.
      # Kafka Connect will attempt to create the topic automatically when needed, but you can always manually create
      # the topic before starting Kafka Connect if a specific topic configuration is needed.
      # Most users will want to use the built-in default replication factor of 3 or in some cases even specify a larger value.
      offset.storage.topic: __continuum-connect-offsets
      offset.storage.replication.factor: 3
      #offset.storage.partitions: 25

      # Topic to use for storing connector and task configurations; note that this should be a single partition, highly replicated,
      # and compacted topic. Kafka Connect will attempt to create the topic automatically when needed, but you can always manually create
      # the topic before starting Kafka Connect if a specific topic configuration is needed.
      # Most users will want to use the built-in default replication factor of 3 or in some cases even specify a larger value.
      config.storage.topic: __continuum-connect-configs
      config.storage.replication.factor: 3

      # Topic to use for storing statuses. This topic can have multiple partitions and should be replicated and compacted.
      # Kafka Connect will attempt to create the topic automatically when needed, but you can always manually create
      # the topic before starting Kafka Connect if a specific topic configuration is needed.
      # Most users will want to use the built-in default replication factor of 3 or in some cases even specify a larger value.
      status.storage.topic: __continuum-connect-status
      status.storage.replication.factor: 3
      #status.storage.partitions: 5

