  # YAML Reference http://www.yaml.org/refcard.html
  continuum:
    discovery: zookeeper

  logging:
    level:
      com:
        kinotic: TRACE
      io:
        vertx: DEBUG

  # This section provides some defaults that are typically used by Continuum Kafka Connect
  # This file is intended to be used with the examples, and some settings may differ from those used in a production system
  # All of the Kafka Connect properties are supported https://docs.confluent.io/platform/current/connect/references/allconfigs.html
  kafka-connect:
    workerProperties:
      # Topic to use for storing offsets. This topic should have many partitions and be replicated and compacted.
      # Kafka Connect will attempt to create the topic automatically when needed, but you can always manually create
      # the topic before starting Kafka Connect if a specific topic configuration is needed.
      # Most users will want to use the built-in default replication factor of 3 or in some cases even specify a larger value.
      # Since this means there must be at least as many brokers as the maximum replication factor used, we'd like to be able
      # to run this example on a single-broker cluster and so here we instead set the replication factor to 1.
      #offset.storage.topic: __continuum-connect-offsets
      offset.storage.replication.factor: 1
      #offset.storage.partitions: 25

      # Topic to use for storing connector and task configurations; note that this should be a single partition, highly replicated,
      # and compacted topic. Kafka Connect will attempt to create the topic automatically when needed, but you can always manually create
      # the topic before starting Kafka Connect if a specific topic configuration is needed.
      # Most users will want to use the built-in default replication factor of 3 or in some cases even specify a larger value.
      # Since this means there must be at least as many brokers as the maximum replication factor used, we'd like to be able
      # to run this example on a single-broker cluster and so here we instead set the replication factor to 1.
      #config.storage.topic: __continuum-connect-configs
      config.storage.replication.factor: 1

      # Topic to use for storing statuses. This topic can have multiple partitions and should be replicated and compacted.
      # Kafka Connect will attempt to create the topic automatically when needed, but you can always manually create
      # the topic before starting Kafka Connect if a specific topic configuration is needed.
      # Most users will want to use the built-in default replication factor of 3 or in some cases even specify a larger value.
      # Since this means there must be at least as many brokers as the maximum replication factor used, we'd like to be able
      # to run this example on a single-broker cluster and so here we instead set the replication factor to 1.
      #status.storage.topic: __continuum-connect-status
      status.storage.replication.factor: 1
      #status.storage.partitions: 5

      # Flush much faster than normal, which is useful for testing/debugging
      offset.flush.interval.ms: 10000
