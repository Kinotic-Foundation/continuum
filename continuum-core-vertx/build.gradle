plugins {
    id 'java'
    id 'idea'

    // see https://docs.spring.io/dependency-management-plugin/docs/current-SNAPSHOT/reference/html5/
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'com.kinotic'
version '1.0-SNAPSHOT'
sourceCompatibility = '15'

repositories {
    mavenCentral()
}

// supplied by io.spring.dependency-management plugin above
dependencyManagement {
    imports {
        // Using BOM from here https://github.com/spring-projects/spring-boot/blob/2.4.x/spring-boot-project/spring-boot-dependencies/build.gradle
        mavenBom 'org.springframework.boot:spring-boot-dependencies:2.4.6'
    }
    dependencies {
        dependency 'com.h2database:h2:1.4.197' // Tied to Ignite version. We make sure this is correct for ignite expectations
    }
}


ext {
    set('groovy.version', "3.0.6")
    continuumVersion='1.0-SNAPSHOT'
    vertxVersion='3.9.8'
    vertxBeansVersion='1.5.0'
    igniteVersion='2.9.1'
    awaitilityVersion='4.0.1'
    kafkaVersion='2.6.0' //linked to aws msk supported version, and all kafka zookeeper curator versions are interdependent
    zookeeperVersion='3.5.8'
}

dependencies {

    // Continuum Dependencies
    compile "com.kinotic:continuum-core:${continuumVersion}"

    // spring
    implementation 'org.springframework:spring-core'
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework:spring-aop'
    implementation 'org.springframework:spring-web' // used for json conversion functionality spring web has a lot of helpful utilities
    implementation 'org.springframework:spring-webflux'
    implementation 'javax.annotation:javax.annotation-api'
    implementation 'org.springframework.boot:spring-boot-autoconfigure' // Used for conditionally wiring beans

    // vertx
    compile "io.vertx:vertx-core:${vertxVersion}"
    implementation "io.vertx:vertx-reactive-streams:${vertxVersion}"
    implementation "com.github.rworsnop:vertx-beans:${vertxBeansVersion}"

    // Kafka and Zookeeper dependencies. Declared with versions to handle compatibility
    // Spring kafka compatibility https://spring.io/projects/spring-kafka
    compile "org.apache.kafka:kafka-clients:${kafkaVersion}"
    compile "org.springframework.kafka:spring-kafka"
    compile 'io.projectreactor.kafka:reactor-kafka'
    compile ("org.apache.zookeeper:zookeeper:${zookeeperVersion}"){
        exclude group: "org.slf4j", module: "slf4j-log4j12"
        exclude group: "log4j", module: "log4j"
    }

    // Apache Ignite
    implementation "io.vertx:vertx-ignite:${vertxVersion}"
    implementation "org.apache.ignite:ignite-core:${igniteVersion}"
    implementation "org.apache.ignite:ignite-indexing:${igniteVersion}"
    implementation "org.apache.ignite:ignite-spring:${igniteVersion}"
    implementation "org.apache.ignite:ignite-slf4j:${igniteVersion}"
    implementation ("org.apache.ignite:ignite-zookeeper:${igniteVersion}"){
        exclude group: "org.slf4j", module: "slf4j-log4j12"
    }
    compile 'com.h2database:h2:1.4.197' // this is the version required by ignite we override what is included by the spring platform bom
    implementation 'javax.cache:cache-api:1.0.0'

    // Json
    compile 'com.fasterxml.jackson.core:jackson-core'
    compile 'com.fasterxml.jackson.core:jackson-annotations'
    compile 'com.fasterxml.jackson.core:jackson-databind'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Dependencies required to handle various JsonSchema converters. These can be moved when that code is separated
    implementation 'org.codehaus.groovy:groovy'

    // Misc
    implementation "org.apache.commons:commons-lang3"
    implementation "commons-io:commons-io:2.8.0"
    implementation 'ch.qos.logback:logback-core'
    implementation 'ch.qos.logback:logback-classic'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation "org.awaitility:awaitility:${awaitilityVersion}"

    //runtimeOnly 'org.springframework.boot:spring-boot-loader'

    testImplementation 'org.springframework.boot:spring-boot-loader-tools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'io.projectreactor:reactor-test'
}

test {
    useJUnitPlatform()
}
