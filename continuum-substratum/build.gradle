plugins {
	id 'java-library'
	id 'idea'

	// see https://docs.spring.io/dependency-management-plugin/docs/current-SNAPSHOT/reference/html5/
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'com.kinotic'
version '1.0-SNAPSHOT'

sourceCompatibility = '15'

repositories {
	mavenCentral()
}

// supplied by io.spring.dependency-management plugin above
dependencyManagement {
	imports {
		// Using BOM from here https://github.com/spring-projects/spring-boot/blob/2.4.x/spring-boot-project/spring-boot-dependencies/build.gradle
		mavenBom 'org.springframework.boot:spring-boot-dependencies:2.4.6'
	}

	dependencies {
		dependency 'com.h2database:h2:1.4.197' // Tied to Ignite version. We make sure this is correct for ignite expectations
	}
}

ext {
	continuumVersion='1.0-SNAPSHOT'
	awsVersion='1.11.1017'
	aws2Version='2.16.66'
	failsafeVersion='2.4.0'
}

dependencies {
	// spring
	implementation 'org.springframework:spring-core'
	implementation 'org.springframework:spring-context'
	implementation 'org.springframework:spring-aop'
	implementation 'javax.annotation:javax.annotation-api'
	implementation 'org.springframework.boot:spring-boot-autoconfigure' // Used for conditionally wiring beans

	api "com.kinotic:continuum-core:${continuumVersion}"
	api "com.kinotic:continuum-core-vertx:${continuumVersion}"
	api "com.kinotic:continuum-grind:${continuumVersion}"
	api "com.kinotic:aws-util:${continuumVersion}"

	api "net.jodah:failsafe:${failsafeVersion}"

	// Aws
	api "com.amazonaws:aws-java-sdk-logs:${awsVersion}"

	api "software.amazon.awssdk:ec2:${aws2Version}"
	api "software.amazon.awssdk:ecs:${aws2Version}"
	api "software.amazon.awssdk:kafka:${aws2Version}"
	api "software.amazon.awssdk:rds:${aws2Version}"
	api "software.amazon.awssdk:route53:${aws2Version}"
	api "software.amazon.awssdk:acm:${aws2Version}"
	api "software.amazon.awssdk:elasticloadbalancingv2:${aws2Version}"
	api "software.amazon.awssdk:secretsmanager:${aws2Version}"

	implementation "org.apache.commons:commons-lang3"

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
}
