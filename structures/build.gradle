plugins {
    id 'java-library'
    id 'idea'

    // see https://docs.spring.io/dependency-management-plugin/docs/current-SNAPSHOT/reference/html5/
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'com.kinotic'
version '1.0-SNAPSHOT'
sourceCompatibility = '15'

repositories {
    mavenCentral()
}

// supplied by io.spring.dependency-management plugin above
dependencyManagement {
    imports {
        // Using BOM from here https://github.com/spring-projects/spring-boot/blob/2.4.x/spring-boot-project/spring-boot-dependencies/build.gradle
        mavenBom 'org.springframework.boot:spring-boot-dependencies:2.4.6'
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    continuumVersion='1.0-SNAPSHOT'
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    implementation "com.kinotic:continuum-core:${continuumVersion}"

    //Misc
    implementation "ch.qos.logback:logback-core"
    implementation "ch.qos.logback:logback-classic"
    implementation "org.apache.commons:commons-lang3"
    implementation "net.logstash.logback:logstash-logback-encoder:4.11"

    implementation 'org.springframework:spring-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // Used for conditionally wiring beans
    implementation 'org.springframework.boot:spring-boot-autoconfigure'

    // reactive https://github.com/reactive-streams/reactive-streams-jvm
    // these should be the only reactive interfaces exposed by the Core API!
    implementation 'org.reactivestreams:reactive-streams'
    implementation 'io.projectreactor:reactor-core'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    // Use JUnit for unit tests
    useJUnit()
}
